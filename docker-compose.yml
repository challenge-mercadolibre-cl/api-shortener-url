version: '3.8'
networks:
  backend-api:
    driver: bridge
volumes:
  elasticsearch:
services:
  api:
    image: cosmtrek/air
    working_dir: /app
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    networks:
      - backend-api
  redis:
    image: redis:latest
    ports:
      - "9001:6379"
    networks:
      - backend-api

  redis-ui:
    image: patrikx3/p3x-redis-ui:latest
    volumes:
      - ./docker/redisui:/settings
    ports:
      - "7843:7843"
    networks:
      - backend-api
    depends_on:
      - redis
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    networks:
      - backend-api

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - backend-api
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    ports:
      - "5601:5601"
  apm:
    image: docker.elastic.co/apm/apm-server:7.13.4
    depends_on:
      - elasticsearch
      - kibana
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    networks:
      - backend-api
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    ports:
      - "8200:8200"

